#!/bin/bash
set -eu

# portage向けの設定をデバイスの固有の環境に合わせて生成する。

# このinstallスクリプトのディレクトリ位置を保持する。
script_dir_relative=$(dirname "$0")
script_dir=$(realpath "$script_dir_relative")
cd "$script_dir"

# マシンがclient(つまりserverではない)かどうかを判定して保持する。
case $(hostnamectl chassis) in
  desktop | laptop)
    is_client=true
    ;;
  server)
    is_client=false
    ;;
  *)
    echo "Unknown chassis: $(hostnamectl chassis)" >&2
    exit 1
    ;;
esac

# `git clean -d --interactive -x`するとgitignoreされていて内部にファイルが無い`package.use/`ディレクトリは消える。
# そうするとファイルをナイーブに書き込めなくなってしまうので毎回作成する。
# 一時的なインストール時の回避などで最初に書き込む関数がどれか変わるかもしれないため、
# あまり行儀が良くないですがそういった関数が定義される前に作成してしまう。
# gitignoreされる空のディレクトリを作成するだけならほぼ害は無いはず。
mkdir -p package.use

# マシンの種類によってプロファイルを選択する。
eselect-profile() {
  if $is_client; then
    eselect profile set default/linux/amd64/17.1/desktop/systemd/merged-usr
  else
    eselect profile set default/linux/amd64/17.1/systemd/merged-usr
  fi
}

# `MAKEOPTS`でジョブ数をCPUコア数にするのは動的な処理が必要。
make-conf() {
  cp "$script_dir"/install.d/make.conf.base "$script_dir"/make.conf

  echo "
## makeopts

MAKEOPTS='-j$(nproc)'" >> "$script_dir"/make.conf
}

# AVXなどはCPUによってサポートしているかが異なるため、
# コマンドによって読み出して設定する。
cpu-flags() {
  echo "*/* $(cpuid2cpuflags)" > "$script_dir"/package.use/cpu-flags
}

# クライアントとサーバに両対応したpackage.useを構築する。
use-dwim-client() {
  if $is_client; then
    use_flag_files=("$script_dir"/install.d/package.use/{base,client}/*)
  else
    use_flag_files=("$script_dir"/install.d/package.use/base/*)
  fi
  for i in "${use_flag_files[@]}"; do
    real_path=$(realpath "$i")
    cd "$script_dir"/package.use/
    rel_path=$(realpath --relative-to=. "$real_path")
    ln -sf "$rel_path" .
    cd "$script_dir"
  done
}

# デバイスによって搭載されているビデオカードが異なる。
video() {
  case $(hostname) in
    bullet)
      # AMD GPU + NVIDIA GPU構成ですが、AMDのCPU内蔵GPUは使わない。
      video_card=nvidia
      ;;
    creep)
      # AMD GPUのみ。
      video_card=amd
      ;;
    *)
      echo "Unknown hostname: $(hostname)" >&2
      exit 1
      ;;
  esac
  case $video_card in
    nvidia)
      echo '*/* VIDEO_CARDS: -* nvidia' > "$script_dir"/package.use/video-cards
      echo '*/* vdpau nvdec nvenc' > "$script_dir"/package.use/video-acceleration
      ;;
    amd)
      # 最近のGPUなら本来はradeonsiだけで良いのだが、
      # 一部のパッケージがradeonsiを動かすためにradeonを要求するので、
      # 別に害も無いはずなのでまとめて有効化している。
      echo '*/* VIDEO_CARDS: -* amdgpu radeonsi radeon' > "$script_dir"/package.use/video-cards
      # amfは現状プロプライエタリなドライバが必要らしいのと、
      # 現状AMD GPUで動画をエンコードする需要が個人的に無いので有効化していない。
      echo '*/* vaapi vdpau' > "$script_dir"/package.use/video-acceleration
      ;;
    *)
      echo "Unknown video card: $video_card" >&2
      exit 1
      ;;
  esac
}

eselect-profile
make-conf
cpu-flags
use-dwim-client
video
